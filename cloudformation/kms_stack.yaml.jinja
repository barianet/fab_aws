AWSTemplateFormatVersion: "2010-09-09"

Description: A {{ this['name'] }} implementation.

Metadata:
  CommitHash: {{ git['hash'] }}
  CommitDescription: {{ git['message'] }}
  AnyCommittedChanges?: {{ git['uncommitted'] }}

{% set RolePermitCount = 4 %}

Parameters:
  {% for i in range(RolePermitCount) %}
  PermitDecryptionByRoleArn{{ i }}:
    Type: String
    Default: ""
    Description: An optional ARN of a role that may decrypt using this key
  {% endfor %}


Conditions:
  {% for i in range(RolePermitCount) %}
  NoPermitDecryptionByRoleArn{{ i }}:
    "Fn::Equals":
      - { Ref: PermitDecryptionByRoleArn{{ i }} }
      - ""
  {% endfor %}


Resources:
  ConfigurationKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A key for encrypting configuration items for cf_toolkit
      KeyPolicy:
        Version: "2012-10-17"
        Id: configuration-key-policy
        Statement:
          - Sid: Allow administration, encrypting, decrypting by all entities in this AWS account.
            Effect: Allow
            Principal:
              AWS: { "Fn::Join": [ ":", [ "arn", "aws", "iam:", { "Ref" : "AWS::AccountId" }, "root" ] ] }
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          {% for i in range(RolePermitCount) %}
          - "Fn::If":
            - NoPermitDecryptionByRoleArn{{ i }}
            - Ref: AWS::NoValue
            - Sid: Allow decryption by this IAM role ARN
              Effect: Allow
              Principal:
                AWS: { Ref: PermitDecryptionByRoleArn{{ i }} }
              Action:
                - "kms:Decrypt*"
              Resource: "*"
          {% endfor %}



Outputs:
  ConfigurationKeyId:
    Value: { Ref : ConfigurationKey }
